// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class PostCreated extends ethereum.Event {
  get params(): PostCreated__Params {
    return new PostCreated__Params(this);
  }
}

export class PostCreated__Params {
  _event: PostCreated;

  constructor(event: PostCreated) {
    this._event = event;
  }

  get author(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get isPaid(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get text(): string {
    return this._event.parameters[2].value.toString();
  }

  get attachments(): Array<string> {
    return this._event.parameters[3].value.toStringArray();
  }

  get timestamp(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class UserCreated extends ethereum.Event {
  get params(): UserCreated__Params {
    return new UserCreated__Params(this);
  }
}

export class UserCreated__Params {
  _event: UserCreated;

  constructor(event: UserCreated) {
    this._event = event;
  }

  get name(): string {
    return this._event.parameters[0].value.toString();
  }

  get publicKey(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get arcanaPublicKey(): string {
    return this._event.parameters[2].value.toString();
  }

  get nftAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class UserFollowed extends ethereum.Event {
  get params(): UserFollowed__Params {
    return new UserFollowed__Params(this);
  }
}

export class UserFollowed__Params {
  _event: UserFollowed;

  constructor(event: UserFollowed) {
    this._event = event;
  }

  get follower(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get followed(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Aegis__usersResult {
  value0: string;
  value1: Address;
  value2: string;
  value3: Address;

  constructor(
    value0: string,
    value1: Address,
    value2: string,
    value3: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    return map;
  }
}

export class Aegis extends ethereum.SmartContract {
  static bind(address: Address): Aegis {
    return new Aegis("Aegis", address);
  }

  manager(): Address {
    let result = super.call("manager", "manager():(address)", []);

    return result[0].toAddress();
  }

  try_manager(): ethereum.CallResult<Address> {
    let result = super.tryCall("manager", "manager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxNumAttachments(): BigInt {
    let result = super.call(
      "maxNumAttachments",
      "maxNumAttachments():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxNumAttachments(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxNumAttachments",
      "maxNumAttachments():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxPostLength(): BigInt {
    let result = super.call("maxPostLength", "maxPostLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxPostLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxPostLength",
      "maxPostLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userHasFollowerNft(param0: Address, param1: Address): boolean {
    let result = super.call(
      "userHasFollowerNft",
      "userHasFollowerNft(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );

    return result[0].toBoolean();
  }

  try_userHasFollowerNft(
    param0: Address,
    param1: Address
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "userHasFollowerNft",
      "userHasFollowerNft(address,address):(bool)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  users(param0: Address): Aegis__usersResult {
    let result = super.call(
      "users",
      "users(address):(string,address,string,address)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new Aegis__usersResult(
      result[0].toString(),
      result[1].toAddress(),
      result[2].toString(),
      result[3].toAddress()
    );
  }

  try_users(param0: Address): ethereum.CallResult<Aegis__usersResult> {
    let result = super.tryCall(
      "users",
      "users(address):(string,address,string,address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aegis__usersResult(
        value[0].toString(),
        value[1].toAddress(),
        value[2].toString(),
        value[3].toAddress()
      )
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreatePostCall extends ethereum.Call {
  get inputs(): CreatePostCall__Inputs {
    return new CreatePostCall__Inputs(this);
  }

  get outputs(): CreatePostCall__Outputs {
    return new CreatePostCall__Outputs(this);
  }
}

export class CreatePostCall__Inputs {
  _call: CreatePostCall;

  constructor(call: CreatePostCall) {
    this._call = call;
  }

  get text(): string {
    return this._call.inputValues[0].value.toString();
  }

  get attachments(): Array<string> {
    return this._call.inputValues[1].value.toStringArray();
  }

  get isPaid(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class CreatePostCall__Outputs {
  _call: CreatePostCall;

  constructor(call: CreatePostCall) {
    this._call = call;
  }
}

export class CreateUserCall extends ethereum.Call {
  get inputs(): CreateUserCall__Inputs {
    return new CreateUserCall__Inputs(this);
  }

  get outputs(): CreateUserCall__Outputs {
    return new CreateUserCall__Outputs(this);
  }
}

export class CreateUserCall__Inputs {
  _call: CreateUserCall;

  constructor(call: CreateUserCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get arcanaPublicKey(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class CreateUserCall__Outputs {
  _call: CreateUserCall;

  constructor(call: CreateUserCall) {
    this._call = call;
  }
}

export class FollowUserCall extends ethereum.Call {
  get inputs(): FollowUserCall__Inputs {
    return new FollowUserCall__Inputs(this);
  }

  get outputs(): FollowUserCall__Outputs {
    return new FollowUserCall__Outputs(this);
  }
}

export class FollowUserCall__Inputs {
  _call: FollowUserCall;

  constructor(call: FollowUserCall) {
    this._call = call;
  }

  get publicKey(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class FollowUserCall__Outputs {
  _call: FollowUserCall;

  constructor(call: FollowUserCall) {
    this._call = call;
  }
}
